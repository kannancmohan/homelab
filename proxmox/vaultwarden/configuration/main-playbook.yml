---
- name: Install & Configure
  hosts: service_hosts
  become: yes
  gather_facts: false
  vars:
    ansible_user: root
  vars_files:
    - vars/default.yaml

  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 120

    - name: Gather facts 
      setup:

    - name: Pre configure host
      import_role:
        name: "{{ playbook_dir }}/../../../commons/ansible/roles/host_pre_configure"
      vars:
        host_name: vaultwarden-container

    - name: Ensure necessary directories are created
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        # owner: root
        # group: root
        # mode: 0775
      loop: ["{{ vault_temp_dir }}", "{{ vault_opt_dir }}", "{{ vault_lib_dir }}/data"]

    - name: Ensure necessary packages are installed
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop: [wget, libmariadb-dev, libpq-dev]

    - name: Get docker-image-extract script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/jjlin/docker-image-extract/main/docker-image-extract
        dest: "{{ vault_temp_dir }}/docker-image-extract"
        mode: '0766'
    
    - name: Extract the vaultwarden docker image
      ansible.builtin.command: "{{ vault_temp_dir }}/docker-image-extract -o {{ vault_temp_dir }}/output {{ vaultwarden_docker_image }}"
      changed_when: true

    - name: Create group vaultwarden
      ansible.builtin.group:
        name: "vaultwarden"
        state: present

    - name: Create 'vaultwarden' user and group
      ansible.builtin.user:
        name: vaultwarden
        groups: vaultwarden
        create_home: no
        append: true # Whether or not to append the user to groups.
        shell: /sbin/nologin
        state: present

    - name: Change file ownership, group for /var/lib/vaultwarden
      ansible.builtin.file:
        path: "{{ vault_lib_dir }}"
        owner: vaultwarden
        group: vaultwarden
        recurse: yes
        # mode: '0644'

    - name: Copy extracted vaultwarden files to destination
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        remote_src: true
        mode: "0755"
      with_items:
        - { src: "{{ vault_temp_dir }}/output/vaultwarden", dest: "{{ vault_opt_dir }}" }
        - { src: "{{ vault_temp_dir }}/output/web-vault", dest: "{{ vault_lib_dir }}" }

    - name: Copy vaultwarden .env template to /var/lib/vaultwarden
      ansible.builtin.template:
          src: templates/.env.j2
          dest: "{{ vault_lib_dir }}/.env"
          # owner: root
          # group: root
          mode: '0644'

    - name: Copy service template to /etc/systemd/system/vaultwarden.service
      ansible.builtin.template:
        src: templates/vaultwarden.service.j2
        dest: /etc/systemd/system/vaultwarden.service
        # owner: root
        # group: root
        mode: '0644'

    - name: Start vaultwarden service
      ansible.builtin.systemd:
        name: vaultwarden
        daemon_reload: true
        enabled: true
        state: restarted

    - name: Delete temp directory
      ansible.builtin.file:
        state: absent
        path: "{{ vault_temp_dir }}"

    - name: Apply ufw settings
      import_role:
        name: "{{ playbook_dir }}/../../../commons/ansible/roles/host_configure_ufw_firewall"
      vars:
        ufw_allowed_ports: ["{{ vaultwarden_port }}"]