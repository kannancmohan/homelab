---
- name: Update apt packages
  apt:
    update_cache: true
    cache_valid_time: 86400 #  One day
- name: Ensure some common packages are installed
  apt:
    name:
      - apt-transport-https
      - curl
      - software-properties-common
      - ca-certificates
    state: present
    update_cache: true

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ host_name_prefix + ansible_host.split('.')[-1][-2:] }}"

- name: Disable SWAP
  command: swapoff -a
  changed_when: false

- name: Disable SWAP in fstab
  lineinfile:
    path: /etc/fstab
    regexp: 'swap'
    state: absent
    backup: true
  notify: Reboot host

- name: Add the overlay kernel module
  community.general.modprobe:
    name: overlay
    state: present
    persistent: present #  adds module to /etc/modules-load.d/ and params to /etc/modprobe.d/ so that the module will be loaded on reboot

- name: Add the br_netfilter kernel module
  community.general.modprobe:
    name: br_netfilter
    state: present
    persistent: present #  adds module to /etc/modules-load.d/ and params to /etc/modprobe.d/ so that the module will be loaded on reboot

- name: Let iptables see bridged traffic
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
    dest: /etc/sysctl.d/k8s.conf
  notify: Reload sysctl #  Apply the iptables changes without need of reboot

- name: Add crio-repo key
  ansible.builtin.apt_key:
    url: "{{ common_crio.ubuntu.crio_repo_key }}"
    keyring: "{{ common_crio.ubuntu.crio_repo_keyring }}"
    state: present

- name: Ensure the presence of apt-repo for crio packages
  ansible.builtin.apt_repository:
    repo: "{{ common_crio.ubuntu.crio_repo }}"
    filename: "{{ common_crio.ubuntu.crio_repo_file }}"
    state: present

- name: Ensure cri-o packages are installed
  apt:
    name: cri-o
    state: present
    update_cache: true

- name: Ensure cri-o is enabled and started
  ansible.builtin.systemd:
    name: crio
    state: started
    enabled: true

# - name: Ensure cri-tools package is installed
#   apt:
#     name: cri-tools
#     state: present
#     update_cache: true

- name: Add kube-repo key
  ansible.builtin.apt_key:
    url: "{{ common_k8s.ubuntu.k8s_repo_key }}"
    keyring: "{{ common_k8s.ubuntu.k8s_repo_keyring }}"
    state: present

- name: Ensure the presence of apt-repo for kubernetes packages
  ansible.builtin.apt_repository:
    repo: "{{ common_k8s.ubuntu.k8s_repo }}"
    filename: "{{ common_k8s.ubuntu.k8s_repo_file }}"
    state: present

- name: Install Kubernetes components
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
    allow_downgrade: true
  with_items: "{{ common_k8s.ubuntu.k8s_packages }}"

- name: Enable kubelet
  ansible.builtin.systemd:
    name: kubelet
    state: started
    enabled: true
  notify: Reboot host
